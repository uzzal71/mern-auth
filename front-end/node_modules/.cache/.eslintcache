[{"C:\\Users\\user\\OneDrive\\Desktop\\linkedin\\mern-auth\\front-end\\src\\index.js":"1","C:\\Users\\user\\OneDrive\\Desktop\\linkedin\\mern-auth\\front-end\\src\\App.js":"2","C:\\Users\\user\\OneDrive\\Desktop\\linkedin\\mern-auth\\front-end\\src\\reportWebVitals.js":"3","C:\\Users\\user\\OneDrive\\Desktop\\linkedin\\mern-auth\\front-end\\src\\Routes.js":"4","C:\\Users\\user\\OneDrive\\Desktop\\linkedin\\mern-auth\\front-end\\src\\pages\\UserInfoPage.js":"5","C:\\Users\\user\\OneDrive\\Desktop\\linkedin\\mern-auth\\front-end\\src\\pages\\LoginInPage.js":"6","C:\\Users\\user\\OneDrive\\Desktop\\linkedin\\mern-auth\\front-end\\src\\pages\\SignUpPage.js":"7","C:\\Users\\user\\OneDrive\\Desktop\\linkedin\\mern-auth\\front-end\\src\\auth\\PrivateRoute.js":"8","C:\\Users\\user\\OneDrive\\Desktop\\linkedin\\mern-auth\\front-end\\src\\auth\\useUser.js":"9","C:\\Users\\user\\OneDrive\\Desktop\\linkedin\\mern-auth\\front-end\\src\\auth\\useToken.js":"10"},{"size":521,"mtime":1650908205793,"results":"11","hashOfConfig":"12"},{"size":173,"mtime":1650908205788,"results":"13","hashOfConfig":"12"},{"size":375,"mtime":1650908205798,"results":"14","hashOfConfig":"12"},{"size":741,"mtime":1650908205789,"results":"15","hashOfConfig":"12"},{"size":3201,"mtime":1650908205797,"results":"16","hashOfConfig":"12"},{"size":1273,"mtime":1650990831400,"results":"17","hashOfConfig":"12"},{"size":1851,"mtime":1650991765482,"results":"18","hashOfConfig":"12"},{"size":248,"mtime":1650991715960,"results":"19","hashOfConfig":"12"},{"size":639,"mtime":1650992337022,"results":"20","hashOfConfig":"12"},{"size":350,"mtime":1650983706192,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"121zpml",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\user\\OneDrive\\Desktop\\linkedin\\mern-auth\\front-end\\src\\index.js",[],["44","45"],"C:\\Users\\user\\OneDrive\\Desktop\\linkedin\\mern-auth\\front-end\\src\\App.js",[],"C:\\Users\\user\\OneDrive\\Desktop\\linkedin\\mern-auth\\front-end\\src\\reportWebVitals.js",[],"C:\\Users\\user\\OneDrive\\Desktop\\linkedin\\mern-auth\\front-end\\src\\Routes.js",[],"C:\\Users\\user\\OneDrive\\Desktop\\linkedin\\mern-auth\\front-end\\src\\pages\\UserInfoPage.js",["46"],"import { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nexport const UserInfoPage = () => {\r\n    // We'll use the history to navigate the user\r\n    // programmatically later on (we're not using it yet)\r\n    const history = useHistory();\r\n\r\n    // These states are bound to the values of the text inputs\r\n    // on the page (see JSX below). \r\n    const [favoriteFood, setFavoriteFood] = useState('');\r\n    const [hairColor, setHairColor] = useState('');\r\n    const [bio, setBio] = useState('');\r\n\r\n    // These state variables control whether or not we show\r\n    // the success and error message sections after making\r\n    // a network request (see JSX below).\r\n    const [showSuccessMessage, setShowSuccessMessage] = useState(false);\r\n    const [showErrorMessage, setShowErrorMessage] = useState(false);\r\n\r\n    // This useEffect hook automatically hides the\r\n    // success and error messages after 3 seconds when they're shown.\r\n    // Just a little user interface improvement.\r\n    useEffect(() => {\r\n        if (showSuccessMessage || showErrorMessage) {\r\n            setTimeout(() => {\r\n                setShowSuccessMessage(false);\r\n                setShowErrorMessage(false);\r\n            }, 3000);\r\n        }\r\n    }, [showSuccessMessage, showErrorMessage]);\r\n\r\n    const saveChanges = async () => {\r\n        // Send a request to the server to\r\n        // update the user's info with any changes we've\r\n        // made to the text input values\r\n        alert('Save functionality not implemented yet');\r\n    }\r\n\r\n    const logOut = () => {\r\n        // We'll want to log the user out here\r\n        // and send them to the \"login page\"\r\n        alert('Log out functionality not implemented yet');\r\n    }\r\n    \r\n    const resetValues = () => {\r\n        // Reset the text input values to\r\n        // their starting values (the data we loaded from the server)\r\n        alert('Reset functionality not implemented yet');\r\n    }\r\n    \r\n    // And here we have the JSX for our component. It's pretty straightforward\r\n    return (\r\n        <div className=\"content-container\">\r\n            <h1>Info for ______</h1>\r\n            {showSuccessMessage && <div className=\"success\">Successfully saved user data!</div>}\r\n            {showErrorMessage && <div className=\"fail\">Uh oh... something went wrong and we couldn't save changes</div>}\r\n            <label>\r\n                Favorite Food:\r\n                <input\r\n                    onChange={e => setFavoriteFood(e.target.value)}\r\n                    value={favoriteFood} />\r\n            </label>\r\n            <label>\r\n                Hair Color:\r\n                <input\r\n                    onChange={e => setHairColor(e.target.value)}\r\n                    value={hairColor} />\r\n            </label>\r\n            <label>\r\n                Bio:\r\n                <input\r\n                    onChange={e => setBio(e.target.value)}\r\n                    value={bio} />\r\n            </label>\r\n            <hr />\r\n            <button onClick={saveChanges}>Save Changes</button>\r\n            <button onClick={resetValues}>Reset Values</button>\r\n            <button onClick={logOut}>Log Out</button>\r\n        </div>\r\n    );\r\n}","C:\\Users\\user\\OneDrive\\Desktop\\linkedin\\mern-auth\\front-end\\src\\pages\\LoginInPage.js",["47"],"C:\\Users\\user\\OneDrive\\Desktop\\linkedin\\mern-auth\\front-end\\src\\pages\\SignUpPage.js",["48","49"],"C:\\Users\\user\\OneDrive\\Desktop\\linkedin\\mern-auth\\front-end\\src\\auth\\PrivateRoute.js",[],"C:\\Users\\user\\OneDrive\\Desktop\\linkedin\\mern-auth\\front-end\\src\\auth\\useUser.js",[],"C:\\Users\\user\\OneDrive\\Desktop\\linkedin\\mern-auth\\front-end\\src\\auth\\useToken.js",[],{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","severity":1,"message":"55","line":7,"column":11,"nodeType":"56","messageId":"57","endLine":7,"endColumn":18},{"ruleId":"54","severity":1,"message":"58","line":5,"column":26,"nodeType":"56","messageId":"57","endLine":5,"endColumn":41},{"ruleId":"54","severity":1,"message":"59","line":7,"column":12,"nodeType":"56","messageId":"57","endLine":7,"endColumn":17},{"ruleId":"54","severity":1,"message":"58","line":9,"column":26,"nodeType":"56","messageId":"57","endLine":9,"endColumn":41},"no-native-reassign",["60"],"no-negated-in-lhs",["61"],"no-unused-vars","'history' is assigned a value but never used.","Identifier","unusedVar","'setErrorMessage' is assigned a value but never used.","'token' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]