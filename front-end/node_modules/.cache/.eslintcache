[{"C:\\Users\\user\\OneDrive\\Desktop\\linkedin\\mern-auth\\front-end\\src\\index.js":"1","C:\\Users\\user\\OneDrive\\Desktop\\linkedin\\mern-auth\\front-end\\src\\App.js":"2","C:\\Users\\user\\OneDrive\\Desktop\\linkedin\\mern-auth\\front-end\\src\\reportWebVitals.js":"3","C:\\Users\\user\\OneDrive\\Desktop\\linkedin\\mern-auth\\front-end\\src\\Routes.js":"4","C:\\Users\\user\\OneDrive\\Desktop\\linkedin\\mern-auth\\front-end\\src\\pages\\UserInfoPage.js":"5","C:\\Users\\user\\OneDrive\\Desktop\\linkedin\\mern-auth\\front-end\\src\\pages\\LoginInPage.js":"6","C:\\Users\\user\\OneDrive\\Desktop\\linkedin\\mern-auth\\front-end\\src\\pages\\SignUpPage.js":"7","C:\\Users\\user\\OneDrive\\Desktop\\linkedin\\mern-auth\\front-end\\src\\auth\\PrivateRoute.js":"8"},{"size":504,"mtime":1618424837000,"results":"9","hashOfConfig":"10"},{"size":164,"mtime":1618424837000,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1618424837000,"results":"12","hashOfConfig":"10"},{"size":719,"mtime":1650824457948,"results":"13","hashOfConfig":"10"},{"size":3120,"mtime":1618424837000,"results":"14","hashOfConfig":"10"},{"size":1273,"mtime":1650822342868,"results":"15","hashOfConfig":"10"},{"size":1529,"mtime":1650822328892,"results":"16","hashOfConfig":"10"},{"size":203,"mtime":1650824596540,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"121zpml",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"20"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\user\\OneDrive\\Desktop\\linkedin\\mern-auth\\front-end\\src\\index.js",[],["38","39"],"C:\\Users\\user\\OneDrive\\Desktop\\linkedin\\mern-auth\\front-end\\src\\App.js",[],"C:\\Users\\user\\OneDrive\\Desktop\\linkedin\\mern-auth\\front-end\\src\\reportWebVitals.js",[],"C:\\Users\\user\\OneDrive\\Desktop\\linkedin\\mern-auth\\front-end\\src\\Routes.js",[],"C:\\Users\\user\\OneDrive\\Desktop\\linkedin\\mern-auth\\front-end\\src\\pages\\UserInfoPage.js",["40"],"import { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nexport const UserInfoPage = () => {\n    // We'll use the history to navigate the user\n    // programmatically later on (we're not using it yet)\n    const history = useHistory();\n\n    // These states are bound to the values of the text inputs\n    // on the page (see JSX below). \n    const [favoriteFood, setFavoriteFood] = useState('');\n    const [hairColor, setHairColor] = useState('');\n    const [bio, setBio] = useState('');\n\n    // These state variables control whether or not we show\n    // the success and error message sections after making\n    // a network request (see JSX below).\n    const [showSuccessMessage, setShowSuccessMessage] = useState(false);\n    const [showErrorMessage, setShowErrorMessage] = useState(false);\n\n    // This useEffect hook automatically hides the\n    // success and error messages after 3 seconds when they're shown.\n    // Just a little user interface improvement.\n    useEffect(() => {\n        if (showSuccessMessage || showErrorMessage) {\n            setTimeout(() => {\n                setShowSuccessMessage(false);\n                setShowErrorMessage(false);\n            }, 3000);\n        }\n    }, [showSuccessMessage, showErrorMessage]);\n\n    const saveChanges = async () => {\n        // Send a request to the server to\n        // update the user's info with any changes we've\n        // made to the text input values\n        alert('Save functionality not implemented yet');\n    }\n\n    const logOut = () => {\n        // We'll want to log the user out here\n        // and send them to the \"login page\"\n        alert('Log out functionality not implemented yet');\n    }\n    \n    const resetValues = () => {\n        // Reset the text input values to\n        // their starting values (the data we loaded from the server)\n        alert('Reset functionality not implemented yet');\n    }\n    \n    // And here we have the JSX for our component. It's pretty straightforward\n    return (\n        <div className=\"content-container\">\n            <h1>Info for ______</h1>\n            {showSuccessMessage && <div className=\"success\">Successfully saved user data!</div>}\n            {showErrorMessage && <div className=\"fail\">Uh oh... something went wrong and we couldn't save changes</div>}\n            <label>\n                Favorite Food:\n                <input\n                    onChange={e => setFavoriteFood(e.target.value)}\n                    value={favoriteFood} />\n            </label>\n            <label>\n                Hair Color:\n                <input\n                    onChange={e => setHairColor(e.target.value)}\n                    value={hairColor} />\n            </label>\n            <label>\n                Bio:\n                <input\n                    onChange={e => setBio(e.target.value)}\n                    value={bio} />\n            </label>\n            <hr />\n            <button onClick={saveChanges}>Save Changes</button>\n            <button onClick={resetValues}>Reset Values</button>\n            <button onClick={logOut}>Log Out</button>\n        </div>\n    );\n}","C:\\Users\\user\\OneDrive\\Desktop\\linkedin\\mern-auth\\front-end\\src\\pages\\LoginInPage.js",["41"],"import { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nexport const LogInPage = () => {\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n\r\n    const [emailValue, setEmailValue] = useState('');\r\n    const [passwordValue, setPasswordValue] = useState('');\r\n\r\n    const history = useHistory();\r\n\r\n    const onLogInClicked = () => {\r\n        alert('Log In not implemented yet?');\r\n    };\r\n\r\n    return (\r\n        <div className=\"content-container\">\r\n            <h1>Log In</h1>\r\n            {errorMessage && <div className=\"fail\">{errorMessage}</div>}\r\n            <input \r\n                onChange={e => setEmailValue(e.target.value)}\r\n                type =\"text\" \r\n                placeholder=\"someone@gmail.com\" />\r\n            <input \r\n                onChange={e => setPasswordValue(e.target.value)}\r\n                type =\"password\" \r\n                placeholder=\"password\" />\r\n            <hr />\r\n            <button disabled={!emailValue || !passwordValue} onClick={onLogInClicked}>Log In</button>\r\n            <button onClick={() => history.push('/forgot-password')}>Forgot your password?</button>\r\n            <button onClick={() => history.push('/signup')}>Don't have an account? Sign Up</button>\r\n        </div>\r\n    );\r\n};","C:\\Users\\user\\OneDrive\\Desktop\\linkedin\\mern-auth\\front-end\\src\\pages\\SignUpPage.js",["42"],"import { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nexport const SignUpPage = () => {\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n\r\n    const [emailValue, setEmailValue] = useState('');\r\n    const [passwordValue, setPasswordValue] = useState('');\r\n    const [confirmPasswordValue, setConfirmPasswordValue] = useState('');\r\n\r\n    const history = useHistory();\r\n\r\n    const onSignUpClicked = () => {\r\n        alert('Sign Up not implemented yet?');\r\n    };\r\n\r\n    return (\r\n        <div className=\"content-container\">\r\n            <h1>Sign Up</h1>\r\n            {errorMessage && <div className=\"fail\">{errorMessage}</div>}\r\n            <input \r\n                onChange={e => setEmailValue(e.target.value)}\r\n                type =\"text\" \r\n                placeholder=\"someone@gmail.com\" />\r\n            <input \r\n                onChange={e => setPasswordValue(e.target.value)}\r\n                type =\"password\" \r\n                placeholder=\"password\" />\r\n            <input \r\n                onChange={e => setConfirmPasswordValue(e.target.value)}\r\n                type =\"password\" \r\n                placeholder=\"confirm password\" />\r\n            <hr />\r\n            <button disabled={\r\n                !emailValue || !passwordValue || \r\n                passwordValue !== confirmPasswordValue\r\n                } onClick={onSignUpClicked}>Sign Up</button>\r\n            <button onClick={() => history.push('/login')}>Already have an account? Log In</button>\r\n        </div>\r\n    );\r\n};","C:\\Users\\user\\OneDrive\\Desktop\\linkedin\\mern-auth\\front-end\\src\\auth\\PrivateRoute.js",[],{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":7,"column":11,"nodeType":"49","messageId":"50","endLine":7,"endColumn":18},{"ruleId":"47","severity":1,"message":"51","line":5,"column":26,"nodeType":"49","messageId":"50","endLine":5,"endColumn":41},{"ruleId":"47","severity":1,"message":"51","line":5,"column":26,"nodeType":"49","messageId":"50","endLine":5,"endColumn":41},"no-native-reassign",["52"],"no-negated-in-lhs",["53"],"no-unused-vars","'history' is assigned a value but never used.","Identifier","unusedVar","'setErrorMessage' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]